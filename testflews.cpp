// generated by Fast Light User Interface Designer (fluid) version 1.0103

#include "testflews.h"
#include <stdio.h>
#include <math.h>

static void cb_Spin(Fl_Spin* o, void*) {
  printf("Spin value: %d\n",(int)(o->value()));
}

static void cb_Spin1(Fl_Spin* o, void*) {
  printf("Spin value: %d\n",(int)(o->value()));
}

static void cb_The(Fl_Ball* o, void*) {
  float rx,ry,rz;
o->getrot(rx,ry,rz);
fprintf(stderr,"rx: %f ry:%f rz:%f\n",rx,ry,rz);
}

static void cb_to(Fl_Ball*, void*) {
  fprintf(stderr,"release callback\n");
}

int main(int argc, char **argv) {
  Fl_Window* w;
  { Fl_Window* o = new Fl_Window(640, 500, "testflews");
    w = o;
    o->color(52);
    { Fl_Group* o = new Fl_Group(5, 5, 439, 189);
      o->box(FL_ENGRAVED_FRAME);
      { Fl_Box* o = new Fl_Box(5, 5, 155, 25, "Fl_Value_Slider_Input");
        o->align(FL_ALIGN_CLIP);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(55, 35, 160, 25, "test:");
        o->type(3);
        o->box(FL_DOWN_BOX);
        o->color(49);
        o->selection_color(49);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.2);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(55, 65, 160, 20, "test:");
        o->type(1);
        o->box(FL_THIN_DOWN_BOX);
        o->color(49);
        o->selection_color(49);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.5);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(55, 90, 160, 25, "test:");
        o->type(5);
        o->box(FL_DOWN_BOX);
        o->color(49);
        o->selection_color(49);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.1);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(55, 160, 160, 20, "test:");
        o->type(3);
        o->box(FL_DOWN_BOX);
        o->color(49);
        o->selection_color(49);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.233);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
        o->textboxsize(50);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(220, 30, 30, 155, "test:");
        o->box(FL_ENGRAVED_BOX);
        o->color(213);
        o->selection_color(1);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.4);
        o->textsize(11);
        o->textcolor(4);
        o->align(FL_ALIGN_TOP);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(255, 30, 40, 155, "test:");
        o->type(4);
        o->box(FL_THIN_UP_BOX);
        o->color(190);
        o->selection_color(6);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->value(0.7);
        o->textsize(11);
        o->textcolor(1);
        o->align(65);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Slider_Input* o = new Fl_Value_Slider_Input(300, 50, 135, 135, "The height of the input box is set automatically from the text height in vert\
ical sliders:");
        o->type(2);
        o->box(FL_DOWN_BOX);
        o->color(51);
        o->selection_color(12);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(11);
        o->labelcolor(56);
        o->value(0.7);
        o->textsize(34);
        o->align(197);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Box* o = new Fl_Box(5, 120, 215, 35, "The size of the input box is set using the \"textboxsize\" function on horizo\
ntal sliders:");
        o->labelsize(10);
        o->align(196|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(6, 197, 299, 140);
      o->box(FL_ENGRAVED_FRAME);
      { Fl_Box* o = new Fl_Box(6, 197, 150, 25, "Fl_Value_Input_Spin");
        o->align(FL_ALIGN_CLIP);
      }
      { Fl_Value_Input_Spin* o = new Fl_Value_Input_Spin(65, 223, 65, 25, "value:");
        o->box(FL_THIN_DOWN_BOX);
        o->color(52);
        o->selection_color(15);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->minimum(-1);
        o->step(0.1);
        o->value(-0.2);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Input_Spin* o = new Fl_Value_Input_Spin(205, 223, 75, 25, "value:");
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(7);
        o->selection_color(15);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->minimum(-1);
        o->step(0.01);
        o->value(0.22);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Value_Input_Spin* o = new Fl_Value_Input_Spin(66, 284, 65, 30, "value:");
        o->box(FL_EMBOSSED_BOX);
        o->color(7);
        o->selection_color(15);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->step(0.01);
        o->textsize(11);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
        o->buttonssize(33);
      }
      { Fl_Value_Input_Spin* o = new Fl_Value_Input_Spin(206, 282, 66, 35, "value:");
        o->box(FL_ROUND_UP_BOX);
        o->color(7);
        o->selection_color(15);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(12);
        o->labelcolor(56);
        o->minimum(-100);
        o->maximum(100);
        o->step(0.1);
        o->value(5);
        o->textsize(16);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
        o->buttonssize(19);
      }
      { Fl_Box* o = new Fl_Box(6, 249, 299, 35, "The size (length) of the spin buttons can be modified with the \"buttonssize\
\" function:");
        o->labelsize(10);
        o->align(196|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(451, 135, 180, 58);
      o->box(FL_ENGRAVED_FRAME);
      { Fl_Spin* o = new Fl_Spin(513, 162, 15, 25, "Spin test:");
        o->box(FL_THIN_UP_BOX);
        o->color(49);
        o->selection_color(4);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(11);
        o->labelcolor(56);
        o->maximum(1000);
        o->step(1);
        o->callback((Fl_Callback*)cb_Spin);
        o->align(68);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Box* o = new Fl_Box(451, 135, 73, 19, "Fl_Spin");
        o->align(FL_ALIGN_CLIP);
      }
      { Fl_Spin* o = new Fl_Spin(546, 162, 15, 25, "Spin test:");
        o->box(FL_THIN_UP_BOX);
        o->color(49);
        o->selection_color(1);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(10);
        o->labelcolor(56);
        o->maximum(1000);
        o->step(1);
        o->callback((Fl_Callback*)cb_Spin1);
        o->align(133);
        o->when(FL_WHEN_CHANGED);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(6, 341, 395, 155);
      o->box(FL_ENGRAVED_FRAME);
      o->align(65);
      { Fl_Box* o = new Fl_Box(6, 341, 65, 20, "Fl_Ball");
        o->align(FL_ALIGN_CLIP);
      }
      { Fl_Ball* o = new Fl_Ball(21, 401, 94, 88, "The Fl_Ball widget doesn\'t requires a 3d library:");
        o->box(FL_ROUND_DOWN_BOX);
        o->color(52);
        o->selection_color(42);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(10);
        o->labelcolor(56);
        o->minimum(-360);
        o->maximum(360);
        o->step(1);
        o->callback((Fl_Callback*)cb_The);
        o->align(197);
        o->when(FL_WHEN_CHANGED);
      }
      { Fl_Ball* o = new Fl_Ball(134, 396, 116, 94, "to get a wireframe ball set the roller type as horizontal:");
        o->type(1);
        o->box(FL_ROUNDED_BOX);
        o->color(53);
        o->selection_color(1);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(10);
        o->labelcolor(56);
        o->minimum(-360);
        o->maximum(360);
        o->step(1);
        o->callback((Fl_Callback*)cb_to);
        o->align(197);
        o->when(FL_WHEN_RELEASE);
        o->ballscale(0.8);
        o->rotateball(M_PI/4.0,0.0,M_PI/8.0);
      }
      { Fl_Ball* o = new Fl_Ball(268, 392, 123, 97, "It\'s possible to change the size of the ball (ballscale), and the number of \
stacks and slices:");
        o->box(FL_THIN_UP_BOX);
        o->color(52);
        o->selection_color(4);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(10);
        o->labelcolor(56);
        o->minimum(-360);
        o->maximum(360);
        o->step(1);
        o->align(197);
        o->when(FL_WHEN_CHANGED);
        o->ballscale(0.9);
        o->stacks(6);
        o->slices(6);
        o->rotateball(M_PI/2.0);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(447, 3, 186, 125);
      { Fl_Box* o = new Fl_Box(451, 3, 178, 125, "FLEWS \nExtended set of valuators for FLTK\nV 0.3");
        o->tooltip("Created by: Daniel Barrero (http://dbarrero.tripod.com)");
        o->box(FL_SHADOW_BOX);
        o->color(7);
        o->selection_color(52);
        o->labelfont(1);
        o->labelsize(15);
        o->align(193|FL_ALIGN_INSIDE);
      }
      { Fl_Box* o = new Fl_Box(473, 87, 141, 32, "Created by: Daniel Barrero\n http://dbarrero.tripod.com");
        o->labelsize(10);
        o->labelcolor(176);
        o->align(FL_ALIGN_CLIP);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(308, 197, 325, 144, "Fl_Multi_Value_Slider");
      o->box(FL_ENGRAVED_FRAME);
      o->align(69|FL_ALIGN_INSIDE);
      { Fl_Multi_Value_Slider* o = new Fl_Multi_Value_Slider(315, 221, 263, 10);
        o->type(1);
        o->box(FL_FLAT_BOX);
        o->color(49);
        o->selection_color(0);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(56);
        o->slider_size(1);
        o->align(FL_ALIGN_BOTTOM);
        o->when(FL_WHEN_CHANGED);
        o->splitseg(0);o->splitseg(0);
      }
      { Fl_Multi_Value_Slider* o = new Fl_Multi_Value_Slider(314, 236, 264, 16);
        o->type(5);
        o->box(FL_FLAT_BOX);
        o->color(49);
        o->selection_color(59);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(0);
        o->align(FL_ALIGN_BOTTOM);
        o->when(FL_WHEN_CHANGED);
        o->splitseg(0);
      }
      { Fl_Multi_Value_Slider* o = new Fl_Multi_Value_Slider(316, 255, 262, 21);
        o->type(1);
        o->box(FL_DOWN_BOX);
        o->color(50);
        o->selection_color(4);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(0);
        o->align(FL_ALIGN_BOTTOM);
        o->when(FL_WHEN_CHANGED);
        o->splitseg(0);o->splitseg(1);
        o->middlevals(0);
      }
      { Fl_Multi_Value_Slider* o = new Fl_Multi_Value_Slider(606, 203, 21, 132);
        o->box(FL_PLASTIC_DOWN_BOX);
        o->color(49);
        o->selection_color(1);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(0);
        o->align(FL_ALIGN_BOTTOM);
        o->when(FL_WHEN_CHANGED);
        o->splitseg(0);o->splitseg(0);
        o->splitseg(1);o->splitseg(0);
        o->middlevals(0);
      }
      { Fl_Box* o = new Fl_Box(312, 279, 270, 58, "the size of the knob gives the direction of the triangles perpendicular to th\
e slider direction, insert & delete keys allow to split, join the selected seg\
ment. the textcolor determines de selected section color, arrow color is given\
 by the selection color");
        o->labelsize(10);
        o->align(196|FL_ALIGN_INSIDE);
      }
      { Fl_Multi_Value_Slider* o = new Fl_Multi_Value_Slider(584, 204, 21, 132);
        o->box(FL_DOWN_BOX);
        o->color(49);
        o->selection_color(3);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(56);
        o->textcolor(12);
        o->align(FL_ALIGN_BOTTOM);
        o->when(FL_WHEN_CHANGED);
        o->splitseg(0);
        o->middlevals(0);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(406, 342, 231, 152, "Fl_Pack_2D");
      o->box(FL_ENGRAVED_FRAME);
      o->align(69|FL_ALIGN_INSIDE);
      { Fl_Pack_2D* o = new Fl_Pack_2D(415, 367, 62, 120, "Vertical");
        o->box(FL_THIN_UP_FRAME);
        o->color(52);
        o->selection_color(19);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(10);
        o->labelcolor(56);
        o->align(65|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
        { Fl_Button* o = new Fl_Button(420, 383, 25, 25, "1");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(447, 383, 24, 25, "2");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(421, 411, 25, 25, "3");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(449, 411, 24, 25, "4");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(422, 438, 25, 25, "5");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(448, 439, 25, 25, "6");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(421, 463, 26, 22, "7");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        o->strips(2);
        o->end();
      }
      { Fl_Box* o = new Fl_Box(493, 347, 140, 81, "works the same way as Fl_Pack, to set the number of rows/colums use the \"str\
ips\" function, if you set a label it\264ll draw it with a background color eq\
ual to the selection color if defined");
        o->labelsize(10);
        o->align(196|FL_ALIGN_INSIDE);
      }
      { Fl_Pack_2D* o = new Fl_Pack_2D(490, 432, 131, 57, "|");
        o->type(1);
        o->box(FL_THIN_UP_FRAME);
        o->color(52);
        o->selection_color(19);
        o->labeltype(FL_NORMAL_LABEL);
        o->labelfont(0);
        o->labelsize(14);
        o->labelcolor(56);
        o->align(68|FL_ALIGN_INSIDE);
        o->when(FL_WHEN_RELEASE);
        { Fl_Button* o = new Fl_Button(521, 434, 25, 19, "1");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(522, 453, 26, 20, "2");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(522, 473, 27, 14, "3");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(550, 434, 25, 19, "4");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(552, 453, 23, 17, "5");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(551, 471, 25, 15, "6");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(579, 434, 25, 15, "7");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(580, 452, 25, 15, "8");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        { Fl_Button* o = new Fl_Button(582, 471, 25, 15, "9");
          o->box(FL_THIN_UP_BOX);
          o->color(52);
        }
        o->strips(3);
        o->end();
      }
      o->end();
    }
    o->end();
    o->resizable(o);
  }
  w->show(argc, argv);
  return Fl::run();
}
